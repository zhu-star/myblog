{"remainingRequest":"E:\\grrenboke\\myblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\grrenboke\\myblog\\node_modules\\vuepress-plugin-ribbon\\bin\\Ribbon.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\grrenboke\\myblog\\node_modules\\vuepress-plugin-ribbon\\bin\\Ribbon.vue","mtime":1635146268437},{"path":"E:\\grrenboke\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635146268573},{"path":"E:\\grrenboke\\myblog\\node_modules\\babel-loader\\lib\\index.js","mtime":1635146268947},{"path":"E:\\grrenboke\\myblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635146268573},{"path":"E:\\grrenboke\\myblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1635146269395}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmliYm9uJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FudmFzOiBudWxsLAogICAgICBjdHg6IG51bGwsCiAgICAgIGFuZ2xlOiAwLAogICAgICByZXNpemVUaW1lb3V0OiBudWxsLAogICAgICBjb25maWc6IHsKICAgICAgICBzaXplOiBSSUJCT05fU0laRSwKICAgICAgICBvcGFjaXR5OiBSSUJCT05fT1BBQ0lUWSwKICAgICAgICB6SW5kZXg6IFJJQkJPTl9aX0lOREVYLAogICAgICB9LAogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBjb25zdCBjYW52YXMgPSB0aGlzLmdldENhbnZhcygpCiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKQogICAgY3R4Lmdsb2JhbEFscGhhID0gdGhpcy5jb25maWcub3BhY2l0eQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIodGhpcy5pc01vYmlsZSgpID8gJ3RvdWNoc3RhcnQnIDogJ2NsaWNrJywgdGhpcy5yZWRyYXcpCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5oYW5kbGVSZXNpemUpCiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcwogICAgdGhpcy5jdHggPSBjdHgKICAgIHRoaXMubWFrZUhpZ2hSZXMoY2FudmFzLCBjdHgpCiAgICB0aGlzLnJlZHJhdygpCiAgfSwKCiAgbWV0aG9kczogewogICAgZHJhdyhmb2xkTWFyaykgewogICAgICBjb25zdCBjdHggPSB0aGlzLmN0eAogICAgICBjb25zdCBzaXplID0gdGhpcy5jb25maWcuc2l6ZQogICAgICBjb25zdCBwMSA9IGZvbGRNYXJrWzBdCiAgICAgIGNvbnN0IHAyID0gZm9sZE1hcmtbMV0KICAgICAgY29uc3QgcDMgPSB7IHg6IHAyLnggKyB0aGlzLnJhbmQoLTAuMjUsIDEuNzUpICogc2l6ZSwgeTogdGhpcy5uZXh0WShwMi55KSB9CiAgICAgIGN0eC5iZWdpblBhdGgoKQogICAgICBjdHgubW92ZVRvKHAxLngsIHAxLnkpCiAgICAgIGN0eC5saW5lVG8ocDIueCwgcDIueSkKICAgICAgY3R4LmxpbmVUbyhwMy54LCBwMy55KQogICAgICBjdHguY2xvc2VQYXRoKCkKICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMubmV4dENvbG9yKCkKICAgICAgY3R4LmZpbGwoKQogICAgICBmb2xkTWFya1swXSA9IHAyCiAgICAgIGZvbGRNYXJrWzFdID0gcDMKICAgIH0sCgogICAgZ2V0Q2FudmFzKCkgewogICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndnVlcHJlc3MtY2FudmFzLXJpYmJvbicpCiAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoCiAgICAgIGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQKICAgICAgdGhpcy5zZXRTdHlsZShjYW52YXMpCiAgICAgIHJldHVybiBjYW52YXMKICAgIH0sCgogICAgcmVkcmF3KCkgewogICAgICBjb25zdCB3aWR0aCA9IHRoaXMuY2FudmFzLndpZHRoCiAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuY2FudmFzLmhlaWdodAogICAgICBjb25zdCBjbGllbnRIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQKICAgICAgY29uc3Qgc2l6ZSA9IHRoaXMuY29uZmlnLnNpemUKICAgICAgY29uc3QgZm9sZE1hcmsgPSBbCiAgICAgICAgeyB4OiAwLCB5OiBjbGllbnRIZWlnaHQgKiAwLjcgKyBzaXplIH0sCiAgICAgICAgeyB4OiAwLCB5OiBjbGllbnRIZWlnaHQgKiAwLjcgLSBzaXplIH0sCiAgICAgIF0KICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHdpZHRoLCBoZWlnaHQpCiAgICAgIHdoaWxlIChmb2xkTWFya1sxXS54IDwgd2lkdGggKyBzaXplKSB0aGlzLmRyYXcoZm9sZE1hcmspCiAgICB9LAoKICAgIG5leHRZKHkpIHsKICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmNhbnZhcy53aWR0aAogICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmNhbnZhcy5oZWlnaHQKICAgICAgY29uc3Qgc2l6ZSA9IHRoaXMuY29uZmlnLnNpemUKICAgICAgY29uc3QgdCA9IHkgKyB0aGlzLnJhbmQoLTEuMSwgMC45KSAqIHNpemUKICAgICAgcmV0dXJuIHQgPiBoZWlnaHQgfHwgdCA8IDAgPyB0aGlzLm5leHRZKHkpIDogdAogICAgfSwKCiAgICBzZXRTdHlsZShjYW52YXMpIHsKICAgICAgY29uc3Qgc3R5bGUgPSBjYW52YXMuc3R5bGUKICAgICAgc3R5bGUub3BhY2l0eSA9IHRoaXMuY29uZmlnLm9wYWNpdHkKICAgICAgc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnCiAgICAgIHN0eWxlLnRvcCA9IDAKICAgICAgc3R5bGUubGVmdCA9IDAKICAgICAgc3R5bGUuekluZGV4ID0gdGhpcy5jb25maWcuekluZGV4CiAgICAgIHN0eWxlLndpZHRoID0gY2FudmFzLndpZHRoCiAgICAgIHN0eWxlLmhlaWdodCA9IGNhbnZhcy5oZWlnaHQKICAgICAgc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJwogICAgfSwKCiAgICBtYWtlSGlnaFJlcyhjYW52YXMsIGN0eCkgewogICAgICBjb25zdCBkcHIgPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxCgogICAgICBjb25zdCBvbGRXaWR0aCA9IGNhbnZhcy53aWR0aAogICAgICBjb25zdCBvbGRIZWlnaHQgPSBjYW52YXMuaGVpZ2h0CgogICAgICBjYW52YXMud2lkdGggPSBNYXRoLnJvdW5kKG9sZFdpZHRoICogZHByKQogICAgICBjYW52YXMuaGVpZ2h0ID0gTWF0aC5yb3VuZChvbGRIZWlnaHQgKiBkcHIpCiAgICAgIGNhbnZhcy5zdHlsZS53aWR0aCA9IG9sZFdpZHRoICsgJ3B4JwogICAgICBjYW52YXMuc3R5bGUuaGVpZ2h0ID0gb2xkSGVpZ2h0ICsgJ3B4JwoKICAgICAgY3R4LnNjYWxlKGRwciwgZHByKQogICAgfSwKCiAgICByYW5kKHN0YXJ0LCBlbmQpIHsKICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAoZW5kIC0gc3RhcnQpICsgc3RhcnQKICAgIH0sCgogICAgbmV4dENvbG9yKCkgewogICAgICBjb25zdCBwaV8yID0gTWF0aC5QSSAqIDIKICAgICAgdGhpcy5hbmdsZSArPSBwaV8yICogMC4wMgogICAgICB0aGlzLmFuZ2xlICU9IHBpXzIKICAgICAgcmV0dXJuICgKICAgICAgICAnIycgKwogICAgICAgICgKICAgICAgICAgICgoTWF0aC5jb3ModGhpcy5hbmdsZSkgKiAxMjcgKyAxMjgpIDw8IDE2KSB8CiAgICAgICAgICAoKE1hdGguY29zKHRoaXMuYW5nbGUgKyBwaV8yIC8gMykgKiAxMjcgKyAxMjgpIDw8IDgpIHwKICAgICAgICAgIChNYXRoLmNvcyh0aGlzLmFuZ2xlICsgKHBpXzIgLyAzKSAqIDIpICogMTI3ICsgMTI4KQogICAgICAgICkKICAgICAgICAgIC50b1N0cmluZygxNikKICAgICAgICAgIC5wYWRTdGFydCg2LCAnMCcpCiAgICAgICkKICAgIH0sCgogICAgaXNNb2JpbGUoKSB7CiAgICAgIHJldHVybiAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QoCiAgICAgICAgbmF2aWdhdG9yLnVzZXJBZ2VudAogICAgICApCiAgICB9LAoKICAgIGhhbmRsZVJlc2l6ZSgpIHsKICAgICAgaWYgKHRoaXMucmVzaXplVGltZW91dCAhPSBudWxsKSB7CiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMucmVzaXplVGltZW91dCkKICAgICAgfQogICAgICB0aGlzLnJlc2l6ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoCiAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0CiAgICAgICAgdGhpcy5tYWtlSGlnaFJlcyh0aGlzLmNhbnZhcywgdGhpcy5jdHgpCiAgICAgICAgdGhpcy5yZWRyYXcoKQogICAgICB9LCA1MDApCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["Ribbon.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ribbon.vue","sourceRoot":"node_modules/vuepress-plugin-ribbon/bin","sourcesContent":["<template>\n  <canvas id=\"vuepress-canvas-ribbon\"></canvas>\n</template>\n\n<script>\nexport default {\n  name: 'Ribbon',\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      angle: 0,\n      resizeTimeout: null,\n      config: {\n        size: RIBBON_SIZE,\n        opacity: RIBBON_OPACITY,\n        zIndex: RIBBON_Z_INDEX,\n      },\n    }\n  },\n\n  mounted() {\n    const canvas = this.getCanvas()\n    const ctx = canvas.getContext('2d')\n    ctx.globalAlpha = this.config.opacity\n    window.addEventListener(this.isMobile() ? 'touchstart' : 'click', this.redraw)\n    window.addEventListener('resize', this.handleResize)\n    this.canvas = canvas\n    this.ctx = ctx\n    this.makeHighRes(canvas, ctx)\n    this.redraw()\n  },\n\n  methods: {\n    draw(foldMark) {\n      const ctx = this.ctx\n      const size = this.config.size\n      const p1 = foldMark[0]\n      const p2 = foldMark[1]\n      const p3 = { x: p2.x + this.rand(-0.25, 1.75) * size, y: this.nextY(p2.y) }\n      ctx.beginPath()\n      ctx.moveTo(p1.x, p1.y)\n      ctx.lineTo(p2.x, p2.y)\n      ctx.lineTo(p3.x, p3.y)\n      ctx.closePath()\n      ctx.fillStyle = this.nextColor()\n      ctx.fill()\n      foldMark[0] = p2\n      foldMark[1] = p3\n    },\n\n    getCanvas() {\n      const canvas = document.getElementById('vuepress-canvas-ribbon')\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      this.setStyle(canvas)\n      return canvas\n    },\n\n    redraw() {\n      const width = this.canvas.width\n      const height = this.canvas.height\n      const clientHeight = window.innerHeight\n      const size = this.config.size\n      const foldMark = [\n        { x: 0, y: clientHeight * 0.7 + size },\n        { x: 0, y: clientHeight * 0.7 - size },\n      ]\n      this.ctx.clearRect(0, 0, width, height)\n      while (foldMark[1].x < width + size) this.draw(foldMark)\n    },\n\n    nextY(y) {\n      const width = this.canvas.width\n      const height = this.canvas.height\n      const size = this.config.size\n      const t = y + this.rand(-1.1, 0.9) * size\n      return t > height || t < 0 ? this.nextY(y) : t\n    },\n\n    setStyle(canvas) {\n      const style = canvas.style\n      style.opacity = this.config.opacity\n      style.position = 'fixed'\n      style.top = 0\n      style.left = 0\n      style.zIndex = this.config.zIndex\n      style.width = canvas.width\n      style.height = canvas.height\n      style.pointerEvents = 'none'\n    },\n\n    makeHighRes(canvas, ctx) {\n      const dpr = window.devicePixelRatio || 1\n\n      const oldWidth = canvas.width\n      const oldHeight = canvas.height\n\n      canvas.width = Math.round(oldWidth * dpr)\n      canvas.height = Math.round(oldHeight * dpr)\n      canvas.style.width = oldWidth + 'px'\n      canvas.style.height = oldHeight + 'px'\n\n      ctx.scale(dpr, dpr)\n    },\n\n    rand(start, end) {\n      return Math.random() * (end - start) + start\n    },\n\n    nextColor() {\n      const pi_2 = Math.PI * 2\n      this.angle += pi_2 * 0.02\n      this.angle %= pi_2\n      return (\n        '#' +\n        (\n          ((Math.cos(this.angle) * 127 + 128) << 16) |\n          ((Math.cos(this.angle + pi_2 / 3) * 127 + 128) << 8) |\n          (Math.cos(this.angle + (pi_2 / 3) * 2) * 127 + 128)\n        )\n          .toString(16)\n          .padStart(6, '0')\n      )\n    },\n\n    isMobile() {\n      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      )\n    },\n\n    handleResize() {\n      if (this.resizeTimeout != null) {\n        clearTimeout(this.resizeTimeout)\n      }\n      this.resizeTimeout = setTimeout(() => {\n        this.canvas.width = window.innerWidth\n        this.canvas.height = window.innerHeight\n        this.makeHighRes(this.canvas, this.ctx)\n        this.redraw()\n      }, 500)\n    },\n  },\n}\n</script>\n"]}]}